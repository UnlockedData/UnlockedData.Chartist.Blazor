@using Microsoft.JSInterop;
@using Chartist.Blazor.Core.Data;
@using UnlockedData.Chartist.Blazor.Extensions

@inject IJSRuntime JS

<div class="chart-container">
<div @ref="elem" class="ct-chart @DisplayRatio.Description() chartist-smart" @attributes="@ExtraAttributes"></div>
</div>

@code {


    ElementReference elem;
    
    [Parameter] 
    public DisplayRatio DisplayRatio { get; set; } = DisplayRatio.Square;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> ExtraAttributes { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public PieChartData Data { get; set; }

    [Parameter]
    public PieOptions Options { get; set; } = new PieOptions();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var objectRef = DotNetObjectReference.Create(this);

        if (firstRender)
        {
            await JS.InvokeVoidAsync("bChartist.createChart", "Pie", elem, Data, Options, objectRef);
        }

        await JS.InvokeVoidAsync("bChartist.updateChart", elem, Data, Options, objectRef);


    }
}
