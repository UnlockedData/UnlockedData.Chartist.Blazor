@using Microsoft.JSInterop
@using UnlockedData.Chartist.Blazor
@using UnlockedData.Chartist.Blazor.Core.Data
@inherits UnlockedData.Chartist.Blazor.Core.ChartBase
@namespace Chartist.Blazor.Charts

<div @ref=elem class="ct-chart ct-golden-section" @attributes=ExtraAttributes></div>

<CascadingValue Value="@this">
    @ChildContent
</CascadingValue>

@code
{
    [Inject]
    private IJSRuntime JS { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public ExtendedChartData Data { get; set; } = new ExtendedChartData();

    [Parameter]
    public BarOptions Options { get; set; } = new BarOptions();

    [Parameter]
    public List<string> Labels { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Data.Labels = Labels ?? Data.Labels;

        var objectRef = DotNetObjectReference.Create(this);

        if (Options.HorizontalBars)
            Data.Series.ForEach(s =>
                s.SeriesPoints.ForEach(d => d.SwapPoints()));

        if (firstRender)
        {
            await JS.InvokeVoidAsync("bizzyChartist.createChart", "Bar", elem, Data, Options, objectRef);
        }

        await JS.InvokeVoidAsync("bizzyChartist.updateChart", elem, Data, Options, objectRef);
    }
}