@using Microsoft.JSInterop;
@using LineChartData = ExtendedChartData

@inject IJSRuntime JS

<div @ref="elem" class="ct-chart" @attributes="@ExtraAttributes"></div>

@* Pass 'this' instance as a cascading parameter to descendants in tree
    <Microsoft.AspNetCore.Components.CascadingValue Value="@this">
        @ChildContent
    </CascadingValue>
*@

@code {


    ElementReference elem;

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> ExtraAttributes { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    //[Parameter]
    //public ChartType Type { get; set; }

    [Parameter]
    public LineChartData Data { get; set; }

    [Parameter]
    public LineOptions Options { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (Options == null)
        {
            Options = new LineOptions();
        }

        if (firstRender)
        {

            await JS.InvokeVoidAsync("bizzyChartist.createChart", "Line", elem, Data, Options);

        }


    }
}
