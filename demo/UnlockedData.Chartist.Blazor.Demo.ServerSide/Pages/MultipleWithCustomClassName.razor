@page "/MultipleWithCustomClassName"
@inject IJSRuntime _jsRuntime;
<h3>Multiple With Custom Class Name</h3>
There is a css file associtated with this that you can change the style of the below
<div>
<ChartistLine Data="MultipleLineData" Options="DefaultLineOptions"/>    
</div>




@code {

    private ExtendedChartData MultipleLineData { get; set; }
    private LineOptions DefaultLineOptions { get; set; } = new()
    {
        SeriesOverrides = new Dictionary<string, LineOptions>()
        {
            {"area", new LineOptions()
                {
                    ShowArea = true,
                    ShowPoint = false,
                    ShowLine = false
                }
            
            },{
                "dots", new LineOptions()
                {
                    ShowPoint = false
                }
            }
        },
        CssClassUpdates = new List<CssClassUpdate>()
        {
            new ()
            {
                CssSelector = ".custom-class-dots .ct-point:nth-of-type(1)",
                Class = "special"
            }
        }
    };

    protected override void OnInitialized()
    {
        MultipleLineData = new ExtendedChartData()
        {

            Labels = new List<string>
            {
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday"
            }

        };


        var dots = new SeriesData()
        {
            Name = "dots",
            ClassName = "custom-class-dots"
        };

        dots.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 12,
            Meta = new PointMetaInfo
            {
                Label = "Monday"
            }
        });
        dots.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 9,
            Meta = new PointMetaInfo
            {
                Label = "Tuesday"
            }
        });
        dots.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 7,
            Meta = new PointMetaInfo
            {
                Label = "Wednesday"
            }
        });
        dots.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 8,
            Meta = new PointMetaInfo
            {
                Label = "Thursday"
            }
        });
        dots.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 5,
            Meta = new PointMetaInfo
            {
                Label = "Friday"
            }
        });
        MultipleLineData.Series.Add(dots);

        var area = new SeriesData()
        {
            Name = "area",
        ClassName = "custom-class-area"

        };

        area.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 10,
            Meta = new PointMetaInfo
            {
                Label = "Monday"
            }
        });
        area.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 5,
            Meta = new PointMetaInfo
            {
                Label = "Tuesday"
            }
        });
        area.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 9,
            Meta = new PointMetaInfo
            {
                Label = "Wednesday"
            }
        });
        area.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 1,
            Meta = new PointMetaInfo
            {
                Label = "Thursday"
            }
        });
        area.SeriesPoints.Add(new SeriesPoint
        {
            X = null,
            Y = 3,
            Meta = new PointMetaInfo
            {
                Label = "Friday"
            }
        });

        MultipleLineData.Series.Add(area);



    }
    





}
